
void printElementA(void);
void printElementAXOR(void);

extern unsigned char* elementSrc;
extern unsigned char* elementDst;
extern unsigned char elementOffset;

unsigned int screeny[] = {40960U, 41000U, 41040U, 41080U, 41120U, 41160U, 41200U, 41240U, 41280U, 41320U, 41360U, 41400U, 41440U, 41480U, 41520U, 41560U, 41600U, 41640U, 41680U, 41720U, 41760U, 41800U, 41840U, 41880U, 41920U, 41960U, 42000U, 42040U, 42080U, 42120U, 42160U, 42200U, 42240U, 42280U, 42320U, 42360U, 42400U, 42440U, 42480U, 42520U, 42560U, 42600U, 42640U, 42680U, 42720U, 42760U, 42800U, 42840U, 42880U, 42920U, 42960U, 43000U, 43040U, 43080U, 43120U, 43160U, 43200U, 43240U, 43280U, 43320U, 43360U, 43400U, 43440U, 43480U, 43520U, 43560U, 43600U, 43640U, 43680U, 43720U, 43760U, 43800U, 43840U, 43880U, 43920U, 43960U, 44000U, 44040U, 44080U, 44120U, 44160U, 44200U, 44240U, 44280U, 44320U, 44360U, 44400U, 44440U, 44480U, 44520U, 44560U, 44600U, 44640U, 44680U, 44720U, 44760U, 44800U, 44840U, 44880U, 44920U, 44960U, 45000U, 45040U, 45080U, 45120U, 45160U, 45200U, 45240U, 45280U, 45320U, 45360U, 45400U, 45440U, 45480U, 45520U, 45560U, 45600U, 45640U, 45680U, 45720U, 45760U, 45800U, 45840U, 45880U, 45920U, 45960U, 46000U, 46040U, 46080U, 46120U, 46160U, 46200U, 46240U, 46280U, 46320U, 46360U, 46400U, 46440U, 46480U, 46520U, 46560U, 46600U, 46640U, 46680U, 46720U, 46760U, 46800U, 46840U, 46880U, 46920U, 46960U, 47000U, 47040U, 47080U, 47120U, 47160U, 47200U, 47240U, 47280U, 47320U, 47360U, 47400U, 47440U, 47480U, 47520U, 47560U, 47600U, 47640U, 47680U, 47720U, 47760U, 47800U, 47840U, 47880U, 47920U, 47960U, 48000U, 48040U, 48080U, 48120U, 48160U, 48200U, 48240U, 48280U, 48320U, 48360U, 48400U, 48440U, 48480U, 48520U, 48560U, 48600U, 48640U, 48680U, 48720U, 48760U, 48800U, 48840U, 48880U};
unsigned char div6[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 25, 25, 25, 25, 25, 25, 26, 26, 26, 26, 26, 26, 27, 27, 27, 27, 27, 27, 28, 28, 28, 28, 28, 28, 29, 29, 29, 29, 29, 29, 30, 30, 30, 30, 30, 30, 31, 31, 31, 31, 31, 31, 32, 32, 32, 32, 32, 32, 33, 33, 33, 33, 33, 33, 34, 34, 34, 34, 34, 34, 35, 35, 35, 35, 35, 35, 36, 36, 36, 36, 36, 36, 37, 37, 37, 37, 37, 37, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39};
unsigned char mod6[] = {0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5};

unsigned int spritesAddr[80];

#define sprite(x, y, spriteId)        \
  elementOffset = mod6[x];            \
  elementDst = screeny[y] + div6[x];  \
  elementSrc = spritesAddr[spriteId]; \
  printElementAXOR();

#define spriteBG(x, y, spriteId)        \
  elementOffset = mod6[x];            \
  elementDst = screeny[y] + div6[x];  \
  elementSrc = spritesAddr[spriteId]; \
  printElementA();

void initSpritesAddr()
{
  unsigned char i;
  for(i = 0; i < 39; ++i)
  {
    spritesAddr[i] = (unsigned int)TILESET + i;
    spritesAddr[i + 40] = (unsigned int)TILESET + (6 * 40) + i;
  }
}


// void spriteXOR(unsigned int des, unsigned int src)
// {
//   elementSrc = (unsigned char *)(src);
//   elementDst = (unsigned char *)(des);

//   printElementAXOR();
// }

// void printElement(unsigned int screenAddr, unsigned char e)
// {
//     elementSrc = (unsigned char *)(spriteAddr[e]);
//     elementDst = (unsigned char *)(screenAddr);
//     // printf("%d %d %x %x \n",x,y,elementDst,elementSrc);get();
//     printElementA();
// }
